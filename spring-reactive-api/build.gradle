import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id 'org.jlleitschuh.gradle.ktlint' version '12.1.0'
}

group = 'br.com.marcelo.reactive'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:r2dbc-postgresql:1.0.5.RELEASE'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	implementation 'org.flywaydb:flyway-core:10.8.1'
	implementation 'org.flywaydb:flyway-database-postgresql:10.8.1'
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'io.r2dbc:r2dbc-pool:1.0.1.RELEASE'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
